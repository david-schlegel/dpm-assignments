# Berechnen der 95. Perzentile für AMP_score und mean_evaluation
quantile_95_mean_evaluation <- quantile(data_processed_after_exclusions$mean_evaluation, 0.95)
# Filtern der Daten für Werte im 95. Perzentil
extreme_values <- data_processed_after_exclusions |>
filter(mean_evaluation >= quantile_95_mean_evaluation)
ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation,
label = subject)) +
geom_jitter(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_text_repel(data = extreme_values,
aes(label = subject),
box.padding = 0.35,
point.padding = 0.5,
segment.color = 'grey50')
library(ggmagnify)
p2 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation,
colour = gender)) +
geom_jitter(alpha = 0.5) +
geom_magnify(shape = "rect",
from = c(xmin = 0.4, xmax = 0.6, ymin = 0.8, ymax = 1.3 ),
to = c(xmin = 0.75, xmax = 1, ymin = 4, ymax = 5.8 )) +
theme_minimal()
p2
ggplot(data_processed_after_exclusions,
aes(x = mean_evaluation,
fill = gender)) +
geom_histogram() +
facet_grid(~ gender) +
theme_minimal()
ggplot(data_processed_after_exclusions,
aes(x = mean_evaluation,
fill = gender)) +
geom_histogram() +
facet_grid(~ gender) +
theme_minimal()
ggplot(data_processed_after_exclusions,
aes(y = mean_evaluation,
x = gender,
fill = gender,
color = gender)) +
geom_violin(alpha = 0.5, size = 0.5) +
theme_minimal()
ggplot(data_processed_after_exclusions,
aes(x = mean_evaluation,
fill = gender)) +
geom_histogram() +
facet_grid(~ gender) +
theme_minimal()
ttest_mean.eval_gender <- t.test(mean_evaluation ~ gender, data = filtered_data)
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
library(tidyverse)
library(janitor) # for clean_names()
library(stringr)
library(openxlsx)
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
library(tidyverse)
library(janitor) # for clean_names()
library(stringr)
library(openxlsx)
# demographics
data_demographics_raw <- read_csv("../data/raw/data_demographics_raw.csv") |>
janitor::clean_names()
# data_demographics_raw_messy <- read_csv("../data/raw/data_demographics_raw_messy.csv", skip = 2) |>
#   janitor::clean_names()
# self report measure
data_selfreport_raw <- read_csv("../data/raw/data_selfreport_raw.csv") |>
janitor::clean_names()
# affect attribution procedure
data_amp_raw <- read_csv("../data/raw/data_amp_raw.csv") |>
janitor::clean_names()
View(data_processed)
data_amp_performance_criteria <- data_amp_raw |>
filter(blockcode != "practice",
trialcode != "instructions") |>
mutate(latency_prob = if_else(latency < 100, TRUE, FALSE)) |>
group_by(subject) |>
summarize(proportion_fast_trials_amp = mean(latency_prob)) |>
mutate(exclude_amp_performance = ifelse(proportion_fast_trials_amp > 0.10, "exclude", "include"))
View(data_amp_performance_criteria)
View(data_amp_raw)
ggplot(data_processed_after_exclusions,
aes(y = mean_evaluation,
x = gender,
fill = gender,
color = gender)) +
geom_violin(alpha = 0.5, size = 0.5) +
scale_x_discrete(limits = c("male", "female", "nonbinary")) +
scale_x_discrete(limits = c("male", "female", "nonbinary"),
labels = c("Male", "Female", "Non-Binary")) +
scale_fill_discrete(limits = c("male", "female", "nonbinary"),
name = "Gender",
labels=c("Male", "Female", "Non-Binary")) +
scale_color_discrete(limits = c("male", "female", "nonbinary"),
name = "Gender", labels=c("Male", "Female", "Non-Binary")) +
labs(x = "Gender", y = "Mean Evaluation") +
theme_minimal()
splithistogram2 <- ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_minimal() +
theme(legend.position = c(0.51, 0.8), legend.background = element_rect(fill = "white")) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = custom_labels) +
labs(fill = "Gender")  # We could also capitalize the header (title) of the legend
splithistogram2 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_minimal() +
theme(legend.position = c(0.51, 0.8), legend.background = element_rect(fill = "white")) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = custom_labels) +
scale_x_discrete(labels = c("Male", "Female", "Non-Binary")) +
labs(fill = "Gender")  # We could also capitalize the header (title) of the legend
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green") +
splithistogram2 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_minimal() +
theme(legend.position = c(0.51, 0.8), legend.background = element_rect(fill = "white")) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green")) +
scale_x_discrete(labels = c("Male", "Female", "Non-Binary")) +
labs(fill = "Gender")  # We could also capitalize the header (title) of the legend
# Print the plot
print(splithistogram2)
# Print the plot
print(splithistogram2)
splithistogram2 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_minimal() +
theme(legend.position = c(0.51, 0.8), legend.background = element_rect(fill = "white")) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green")) +
scale_x_discrete(labels = c("Male", "Female", "Non-Binary")) +
labs(fill = "Gender")  # We could also capitalize the header (title) of the legend
# Print the plot
print(splithistogram2)
splithistogram2 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_minimal() +
theme(legend.position = c(0.51, 0.8), legend.background = element_rect(fill = "white")) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green")) +
scale_x_continuous(labels = c("Male", "Female", "Non-Binary")) +
labs(fill = "Gender")  # We could also capitalize the header (title) of the legend
# Print the plot
print(splithistogram2)
splithistogram2 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_minimal() +
theme(legend.position = c(0.51, 0.8), legend.background = element_rect(fill = "white")) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green")) +
labs(fill = "Gender")  # We could also capitalize the header (title) of the legend
# Print the plot
print(splithistogram2)
splithistogram2 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_minimal() +
theme(legend.position = c(0.51, 0.8), legend.background = element_rect(fill = "white")) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green")) +
scale_fill_discrete(labels = c("Male", "Female", "Non-Binary")) +
labs(fill = "Gender")  # We could also capitalize the header (title) of the legend
# Print the plot
print(splithistogram2)
splithistogram2 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_minimal() +
theme(legend.position = c(0.51, 0.8), legend.background = element_rect(fill = "white")) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green")) +
scale_fill_discrete(labels = c("Male", "Female", "Non-Binary")) +
labs(fill = "Gender")  # We could also capitalize the header (title) of the legend
theme_minimal()
splithistogram2 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme(legend.position = c(0.51, 0.8), legend.background = element_rect(fill = "white")) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green")) +
scale_fill_discrete(labels = c("Male", "Female", "Non-Binary")) +
labs(fill = "Gender") +  # We could also capitalize the header (title) of the legend
theme_minimal()
# Print the plot
print(splithistogram2)
splithistogram2 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme(legend.position = c(0.51, 0.8), legend.background = element_rect(fill = "white")) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Nonbinary")) +
labs(fill = "Gender") +  # We could also capitalize the header (title) of the legend
theme_minimal()
# Print the plot
print(splithistogram2)
splithistogram2 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme(legend.position = c(0.51, 0.8), legend.background = element_rect(fill = "white")) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +  # Ändern der Beschriftungen hier
labs(fill = "Gender") +
theme_minimal()
# Print the plot
print(splithistogram2)
splithistogram2 <- ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
facet_grid(. ~ gender) +
theme_minimal() +
theme(legend.position = c(0.51, 0.8))
# Print the plot
print(splithistogram2)
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
#  facet_grid(. ~ gender) +
theme_minimal() +
theme(legend.position = c(0.51, 0.8))
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
facet_grid(. ~ gender) +
#  theme_minimal() +
theme(legend.position = c(0.51, 0.8))
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender))
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
facet_grid(. ~ gender) +
theme_minimal() +
theme(legend.position = c(0.51, 0.8))
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(position = "dodge", binwidth = 0.15, color = "black", alpha = 0.7) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
facet_grid(. ~ gender) +
theme_minimal() +
theme(legend.position = c(0.51, 0.8))
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
facet_grid(. ~ gender) +
theme_minimal() +
theme(legend.position = c(0.51, 0.8))
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
facet_grid(. ~ gender) +
theme_minimal() +
#  theme(legend.position = c(0.51, 0.8))
```
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
facet_grid(. ~ gender) +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_manual(labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_discrete(labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_discrete(labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_continuous(labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "Farbe1", "male" = "Farbe2", "nonbinary" = "Farbe3"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
View(data_processed_after_exclusions)
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("female" = "Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score) +
ggplot(data_processed_after_exclusions, aes(x = AMP_score)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score)) +
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
#  facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_bar(binwidth = 0.15, color = "black", alpha = 0.7) +
#  facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_bar(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, color = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, color = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_color_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, color = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_color_discrete(values = c("female" = "red", "male" = "blue", "nonbinary" = "green"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, color = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_color_discrete(
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, color = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_color_continuous(
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "Farbe1", "male" = "Farbe2", "nonbinary" = "Farbe3"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = gender)) +
geom_histogram(binwidth = 0.15, color = "black", alpha = 0.7) +
facet_grid(. ~ gender) +
scale_fill_manual(values = c("female" = "red", "male" = "blue", "nonbinary" = "yellow"),
labels = c("Female", "Male", "Non-binary")) +
labs(x = "AMP score", y = "Mean self-reported evaluation", fill = "Gender") +
theme_minimal()
p2 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation,
colour = gender)) +
geom_jitter(alpha = 0.5) +
geom_magnify(shape = "rect",
from = c(xmin = 0.4, xmax = 0.6, ymin = 0.8, ymax = 1.3 ),
to = c(xmin = 0.75, xmax = 1, ymin = 4, ymax = 5.8 )) +
theme_minimal()
p2
data_processed_after_exclusions |>
correlation::cor(AMP_score, mean_evaluation)
data_processed_after_exclusions |>
cor(AMP_score, mean_evaluation)
data_processed_after_exclusions |>
cor(AMP_score, mean_evaluation)
?cor
?cor.test
data_processed_after_exclusions |>
cor.test(AMP_score, mean_evaluation)
data_processed_after_exclusions |>
cor.test(mean_evaluation, AMP_score)
data_processed_after_exclusions |>
cor.test(x mean_evaluation, AMP_score, method = "kendall")
data_processed_after_exclusions |>
cor.test(x mean_evaluation, AMP_score, method = "kendall")
data_processed_after_exclusions |>
cor.test(mean_evaluation, AMP_score, method = "kendall")
cor.test(data_processed_after_exclusions$AMP_score, data_processed_after_exclusions$mean_evaluation,
method = "pearson")
data_processed_after_exclusions |>
summarise(cor.test(AMP_score, mean_evaluation,
method = "pearson"))
data_processed_after_exclusions |>
summarise(pearson = cor.test(AMP_score, mean_evaluation,
method = "pearson"))
cor.test(data_processed_after_exclusions$AMP_score, data_processed_after_exclusions$mean_evaluation,
method = "pearson")
